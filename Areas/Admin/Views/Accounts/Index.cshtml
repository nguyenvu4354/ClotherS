@using X.PagedList
@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<ClotherS.Models.Account>

@{
    ViewData["Title"] = "Account List";
    var userRoles = ViewBag.UserRoles as Dictionary<string, string>;
}

<div class="container-fluid">
    <h1 class="title text-center">Account List</h1>

    <p>
        <a asp-action="Create" class="btn btn-primary">Create New</a>
    </p>

    <div class="row mb-3">
        <div class="col-md-6">
            <input type="text" id="searchBox" class="form-control" placeholder="Search by User Name...">
        </div>
        <div class="col-md-6">
            <select id="statusFilter" class="form-control">
                <option value="all">All</option>
                <option value="active">Active</option>
                <option value="inactive">Inactive</option>
            </select>
        </div>
    </div>

    <table class="table table-striped" id="accountTable">
        <thead>
            <tr>
                <th>Image</th>
                <th>Full Name</th>
                <th>User Name</th>
                <th>Role</th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr class="account-row" data-username="@item.UserName.ToLower()" data-status="@(item.Active.HasValue && item.Active.Value ? "active" : "inactive")">
                    <td>
                        <div class="profile-img-container">
                            <img src="@Url.Content(string.IsNullOrEmpty(item.AccountImage) ? "~/images/accountImg.png" : "~/images/" + item.AccountImage)"
                                 alt="Profile" class="profile-img" />
                        </div>
                    </td>

                    <td>@(item.FirstName + " " + item.LastName)</td>
                    <td>@item.UserName</td>
                    <td>
                        @if (userRoles != null && userRoles.ContainsKey(item.Id.ToString()))
                        {
                            <span class="badge bg-info">@userRoles[item.Id.ToString()]</span>
                        }
                        else
                        {
                            <span class="badge bg-secondary">No Role</span>
                        }
                    </td>
                    <td>
                        @if (item.Active.HasValue && item.Active.Value)
                        {
                            <span class="badge bg-success">Active</span>
                        }
                        else
                        {
                            <span class="badge bg-danger">Inactive</span>
                        }
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning">Edit</a>
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info">Details</a>
                        <button class="btn btn-sm btn-danger delete-account" data-id="@item.Id">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div id="pagination">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page }))
    </div>
</div>

@* Token CSRF để bảo mật *@
<form id="deleteAccountForm">
    @Html.AntiForgeryToken()
</form>

<link rel="stylesheet" href="~/css/account-list.css" />

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="~/js/account-list.js"></script>